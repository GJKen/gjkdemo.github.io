<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>GJKen</title><link>https://GJKen.github.io/demo</link><description> </description><copyright>GJKen</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://ipfs.mbzj.org/ipfs/QmWdwjYEWh1CfZe7NtbJcBp658tWbs7PqeaxgLh46NwxRZ</url><title>avatar</title><link>https://GJKen.github.io/demo</link></image><lastBuildDate>Sat, 09 Nov 2024 16:23:03 +0000</lastBuildDate><managingEditor>GJKen</managingEditor><ttl>60</ttl><webMaster>GJKen</webMaster><item><title>Serv00 - 使用记录</title><link>https://GJKen.github.io/demo/post/4.html</link><description># 注册Serv00&#13;
注册没什么好说的, gmail+干净一点的ip基本上都可以成功, 这里不多做展开.&#13;
收不到邮件信息的估计是邮箱问题.比如 https://mail.proton.me&#13;
&#13;
# 准备工作&#13;
进入 Additional services 选项卡中找到 Run your own applications 项目,&#13;
如下图所示, 必须要设置成如图所示的 Enabled.&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmUg8VV61q7DApUWcijdA1xdZar5wE5TUhcfMq5femCMYs'&gt;`&#13;
&#13;
如果不开启这一项, 自己的用户目录下的所有文件都无法添加可执行权限.&#13;
&#13;
# 部署记录&#13;
## Alist&#13;
### 创建端口&#13;
&#13;
每个账户只能创建3个端口.&#13;
其中一个用来反代本地搭建 Alist 的端口, 这里我用26666&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmNSXAsz4QFnkTp3JRHGLuUJStNoPaK7yERRqPj9spXSc9'&gt;`&#13;
&#13;
### 创建网站&#13;
&#13;
&gt; Serv00 账号创建好之后默认就有一个网站, 一般是`USERNAME.serv00.net`, 可以随意删除.&#13;
&#13;
这里可以用自己的域名或者用 Serv00 的域名.&#13;
下图我写的是自己的域名, 后续可以通过自定义域名访问.&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmX3mkbrv5EfzsCzJXTTGqKdYDiXc2eu5BJMuK7ozD3PNC'&gt;`&#13;
&#13;
其中26666这个端口是 alist 服务的端口.&#13;
&#13;
### 网站添加SSL证书&#13;
站点创建完成后, 点击上方的 Manage SSL certificates&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmWRkpfidsY2KGkX47dAW4tKmNe2hStW6vzodRe7GUG2dw'&gt;`&#13;
&#13;
点击 Manage&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmcXdLQSy2PJpuWMCVzMZebNFpdt2w3P6Px1wQ84Pi9jbx'&gt;`&#13;
&#13;
点击 Add certificate&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/Qmd9CV8BxtjSMZivZnCQrVd1dqByaj6HoUWKi8UMrC8ZX6'&gt;`&#13;
&#13;
### 安装Alist&#13;
&gt; [!TIP]&#13;
&gt; Alist 官方在 24年8月17日, 增加了 [beta](https://github.com/AlistGo/alist/releases/tag/beta) 版本, 支持 FreeBSD 系统下能够运行的 Alist 可执行文件🎉&#13;
&#13;
Serv00 本身提供的网站托管在 `~/domains` 路径下, 所以我建议把 Alist 也部署到这个路径下的子目录.&#13;
&#13;
复制到终端粘贴使用:&#13;
&gt; 一键创建目录并下载 Alist, 增加执行权限&#13;
&#13;
```bash&#13;
mkdir -p ~/domains/alist &amp;&amp; cd ~/domains/alist &amp;&amp; curl -L -o alist.tar.gz https://github.com/AlistGo/alist/releases/download/beta/alist-freebsd-amd64.tar.gz &amp;&amp; tar -xzf alist.tar.gz &amp;&amp; chomd +x alist&#13;
```&#13;
&#13;
### 第一次启动Alist生成配置文件&#13;
然后需要先启动一次 Alist 让它生成配置文件, 此次启动一定会失败, 请不用在意：&#13;
&#13;
```bash&#13;
./alist server&#13;
```&#13;
&#13;
### 创建Alist所需数据库&#13;
回到 Panel 面板, 找到 MySQL 选项卡, 使用 Add database 功能新建一个数据库：&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/Qmd1bF66pa9RihfeYZ6odBBG9htemSi57jy2A32Q4wDt7r'&gt;`&#13;
&#13;
Database name 和 Username 字段为了方便好记就写 Alist 就行了.&#13;
&#13;
&gt; 密码要求含有大写字母, 小写字母和数字三种字符, 且长度必须超过6个字符.&#13;
&#13;
### 修改配置文件&#13;
进入 Panel 面板, 找到 File manager 选项卡, 会如下图的进入文件管理器&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmXmXQRv5AfHqy2sRYS4dNCPQL2xPiGfaGtgTJjwGsX5Et'&gt;`&#13;
&#13;
双击编辑这个`config.json`文件.&#13;
&#13;
我主要修改了`CDN` `database` `scheme`三个部分,&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmXLJa8YMr9KufMYVNQjVW1wXCjWmJ3Q9V1PqR5BRXHtHU'&gt;`&#13;
&lt;table&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;&lt;p&gt;CDN&lt;/p&gt;&lt;/td&gt;&#13;
    &lt;td colspan='2'&gt;&#13;
      &lt;p&gt;&lt;span&gt;可以在 &lt;a href='https://alist.nn.ci/zh/config/configuration.html#cdn'&gt;Alist&lt;/a&gt; 的官方文档找到, 请选择你本地网络连接速度最快的一个.&lt;/span&gt;&lt;/p&gt;&#13;
    &lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td rowspan='6'&gt;database&lt;/td&gt;&#13;
    &lt;td&gt;type&lt;/td&gt;&#13;
    &lt;td&gt;因为我们创建的数据库类型是 mysql, 所以这里写&lt;code class='notranslate'&gt;mysql&lt;/code&gt;.&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;host&lt;/td&gt;&#13;
    &lt;td&gt;例如我的 serv00 是12, 就写&lt;code class='notranslate'&gt;mysql12.serv00.com&lt;/code&gt;, 自己看着写.&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;port&lt;/td&gt;&#13;
    &lt;td&gt;mysql 端口, 默认&lt;code class='notranslate'&gt;3306&lt;/code&gt;.&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;user&lt;/td&gt;&#13;
    &lt;td&gt;填写创建的数据库用户名&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;passdowd&lt;/td&gt;&#13;
    &lt;td&gt;填写创建的数据密码&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;name&lt;/td&gt;&#13;
    &lt;td&gt;填写创建的数据表名称&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td rowspan='2'&gt;database&lt;/td&gt;&#13;
    &lt;td&gt;scheme&lt;/td&gt;&#13;
    &lt;td&gt;0.0.0.0&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
  &lt;tr&gt;&#13;
    &lt;td&gt;http_port&lt;/td&gt;&#13;
    &lt;td&gt;填写创建的端口&lt;/td&gt;&#13;
  &lt;/tr&gt;&#13;
&lt;/table&gt;&#13;
&#13;
改完之后, 点击save保存&#13;
&#13;
### 再次启动Alist&#13;
回到SSH窗口中进行操作.&#13;
&#13;
```bash&#13;
./alist server&#13;
```&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmYL72sd2Wyb5C6WrJe6G7w1NvAdpqXiUwFWUEm6FCSGxt'&gt;`&#13;
&#13;
运行正常, 记得把管理员用户的密码记住.接着使用Ctrl+c停止运行.&#13;
&#13;
### 使用 Cloudflare 和域名绑定&#13;
&#13;
&gt; 因为 serv00 的域名基本上都会被墙, 没办法只能用~~cf减速器~~跨墙了&#13;
&#13;
我们进入 https://dash.cloudflare.com&#13;
点击添加域&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmcFYHqU8iTz77vEzVUkrHkMiQUcJ1mCjBz2u6q9mszmaD'&gt;`&#13;
&#13;
输入自己的域名&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmWEwsF7kjqWYZET8AbyPbVizciT3pLDbi6Pjm4xkYZvCS'&gt;`&#13;
&#13;
选择 free 计划&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmeYbZ48awUqAPApdLrRckVqbtLB71XWTpCafpHCwE2hHG'&gt;`&#13;
&#13;
复制 dns 名称服务器&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmakCvRG52FLk2NV1XFjmWmz5LZuhPg3oD2SdiTunQH8TU'&gt;`&#13;
&#13;
然后转到你的域名提供服务商, 添加dns记录&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmUN7NYdHmRnLgHEGtFdHF3ygCtkVsR6WyRyhsX9nhDB1a'&gt;`&#13;
&#13;
如果没问题就可以通过自定义域名访问了&#13;
&#13;
### Alist 保活&#13;
&#13;
11&#13;
&#13;
### 收尾工作&#13;
&#13;
Serv00会不定时杀进程, 我们需要&#13;
&#13;
Serv00会不定时杀进程, 所以我们把pm2添加开机自启, 可以保证每次重启都能由pm2调动Alist和Cloudflared.而且Serv00每三个月内必须要有一次登录面板或者SSH连接, 不然会删号, 也可以通过一个脚本解决问题, 接下来我会详细说明.。</description><guid isPermaLink="true">https://GJKen.github.io/demo/post/4.html</guid><pubDate>Thu, 07 Nov 2024 14:45:21 +0000</pubDate></item><item><title>免费CDN: jsDelivr+Github 使用方法</title><link>https://GJKen.github.io/demo/post/3.html</link><description># jsDelivr 官网&#13;
&gt; https://www.jsdelivr.com&#13;
&#13;
# 先决条件&#13;
必须要自己创建一个GitHub仓库!&#13;
&#13;
# 创建版本号&#13;
进入仓库点击releases&#13;
&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/QmU1czFFqTS8kx6nkc52dxxdJHw3ASpeGGHCYmUgRxcBxM'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmcPKqqhyTPZrsbvDW5KcibNfEFN55t6yecS71yAL8Nh7F'&gt;`&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmZEczMS98W1qbcHJXhn6NtVXkC9UwdjP417hFRpkCTphh'&gt;`&#13;
&#13;
# 使用方法&#13;
例如:&#13;
`https://cdn.jsdelivr.net/gh/[GitHub用户名]/[仓库名]@[标签或分支]/[文件路径]`&#13;
https://cdn.jsdelivr.net/gh/gjken/gjken.github.io/static/primer.min.css&#13;
&#13;
| Key | Value&#13;
|-|-&#13;
[GitHub用户名] | 写你的 GitHub 用户名&#13;
[仓库名] | 写你的 GitHub 仓库名称&#13;
[标签或分支] | 例如 `https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js`&lt;br&gt;都不写默认访问最新版本.&lt;/br&gt;&#13;
[文件路径] | 写你的 GitHub 仓库文件路径。</description><guid isPermaLink="true">https://GJKen.github.io/demo/post/3.html</guid><pubDate>Wed, 06 Nov 2024 17:59:25 +0000</pubDate></item><item><title>Adobe PhotoShop - 插件导出ICO格式</title><link>https://GJKen.github.io/demo/post/2.html</link><description>Adobe Photoshop默认不能输出为这个格式, 想要这个格式的话可能需要其他软件进行转换, 其实PS装一个插件就可以另存为ICO格式的图标文件.&#13;
&#13;
# 文件下载&#13;
先下载文件, 解压缩&#13;
ICOFormat64.8bi [蓝奏云](https://www.lanzouj.com/iVf1l2e80z5a)&#13;
&#13;
# 安装路径&#13;
&#13;
下面举一个我的ps安装路径的例子, 自己根据需要修改安放插件的路径, 放入`Plug-ins`文件夹下面就行&#13;
`E:\Program\Adobe\Adobe Photoshop CC (64 Bit)\Adobe Photoshop CC (64 Bit)\Plug-ins`&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmeXhTy477aNcmBrb9KqGhYNK2RAMcw3NCMT8PW7C8hFoe'&gt;`&#13;
&#13;
# 导出图示&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmSCS8joKgcj5ufdt9vDuBdQZgAe1EfMxBsgRiisNBFBw7'&gt;`&#13;
&#13;
这个默认选第一个就好.&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmeaG2ShJUcW5EzC8d3jeSa2d36TdzZpeuKjMeB65k2dbw'&gt;`。</description><guid isPermaLink="true">https://GJKen.github.io/demo/post/2.html</guid><pubDate>Mon, 04 Nov 2024 06:56:42 +0000</pubDate></item><item><title>Gmeek - 记录使用过程</title><link>https://GJKen.github.io/demo/post/1.html</link><description>[Gmeek](https://github.com/Meekdai/Gmeek) 博客完全依托 Github, 提供域名, 无需服务器, 比起传统的服务器建站更方便快捷.&#13;
&#13;
# 搭建博客&#13;
&#13;
**如何搭建博客我就不写了, 这里主要记录一些js和css的修改.**&#13;
搭建详情请看官方文档: https://blog.meekdai.com/tag.html#gmeek&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 利用 Github Page 搭建的网站内容是完全公开的, 请注意不要上传自己的隐私!!!&#13;
&#13;
# Config.json 小妙用&#13;
&#13;
## subTitle - js插入&#13;
&#13;
代码:&#13;
&#13;
```json&#13;
'subTitle':'&lt;script&gt;document.getElementById('content').innerHTML = `&lt;div style='text-align: center;'&gt;&lt;p&gt;CV工程师,&lt;/p&gt;&lt;p&gt;一个又菜又爱玩, 喜欢瞎折腾的流浪者.&lt;/p&gt;&lt;/div&gt;`;&lt;/script&gt;',&#13;
```&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/QmPJLQrhBg9opKvbgNGqQaEopEKJnsH3thbH7wNbocp6VF'&gt;`&#13;
&#13;
从图中可以看到, 可用js插入html实现修改文字.&#13;
&#13;
## subTitle - 隐藏&#13;
&#13;
'subTitle':' ',&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/Qmei764zAMx9fXgotWbrrwizXRsrk42GGiKor2Zqo8hFgy'&gt;`&#13;
&#13;
可以用空白字符的方式, 隐藏subTitle必须字段, 无需使用js隐藏.&#13;
&#13;
# 记录功能块代码&#13;
&#13;
代码摘抄自网络, 有删改, 都存放在仓库, 使用 jsdelivr CDN 加速.&#13;
&#13;
## [ArticleToc.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ArticleToc.js) - 文章增加目录列表+一键返回顶部按钮&#13;
&#13;
&gt; 来源: [Github](https://github.com/cao-gift/cao-gift.github.io?tab=readme-ov-file)&#13;
&gt; 修改-切换博客主题时颜色不一致, 增加滚动同步定位章节, 修改动画和样式.&#13;
&gt; 已知bug: 给body增加`backdrop-filter: blur(30px);`样式时, 会出现滚动错误. 待后续修复.&#13;
&#13;
图示:&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmZZc1AEpcDTUiasyp6qkGx4h2K7btob9U4c9RAgrTMnx1'&gt;`&#13;
&#13;
## [lightbox-gjken.js](https://github.com/GJKen/gjken.github.io/blob/main/static/lightbox-gjken.js) - 灯箱&#13;
&#13;
&gt; 来源: [Github](https://github.com/tiengming/tiengming.github.io)&#13;
&gt; 修改-增加图片拖动, 增加点击图片外部退出灯箱.&#13;
&gt; 已知bug: 当图片缩放过后,再对图片拖动会有微小偏差,~~我代码能力实在是太菜了😭~~.&#13;
&#13;
通过点击可大图浏览文章中的图片, 适合一些图片较多的文章.&#13;
&#13;
Windows 端通过 Ctrl+滚轮放大, 同时滚轮可左右切换图片.&#13;
&#13;
Android 端可通过滑动屏幕左右切换图片.&#13;
&#13;
## [GmeekVercount_uv.js](https://github.com/GJKen/gjken.github.io/blob/main/static/GmeekVercount_uv.min.js) - 网站增加访客计数器&#13;
&#13;
&gt; Vercount [Github](https://github.com/EvanNotFound/vercount)&#13;
&gt; pv修改成uv计数&#13;
&#13;
建议放入 `allHead` 里全站添加js.&#13;
&#13;
```json&#13;
'allHead':'&lt;script src='https://cdn.jsdelivr.net/gh/gjken/gjkdemo.github.io@main/static/GmeekVercount_uv.min.js'&gt;&lt;/script&gt;'&#13;
```&#13;
&#13;
## [ImgLazyLoad.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ImgLazyLoad.js) - 图片懒加载&#13;
&#13;
&gt; 来源: [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
## [NumPagination.js](https://github.com/GJKen/gjken.github.io/blob/main/static/NumPagination.js) - 主页添加数字分页条&#13;
&#13;
&gt; 来源 [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
# 修改网站样式&#13;
&#13;
[primer.css](https://github.com/GJKen/gjken.github.io/blob/main/static/primer.css), 这个文件用来控制网站的整体样式, 存放在我的git仓库, 使用 jsdelivr CDN 加速.&#13;
对应的选择器只张贴出关键 CSS 部分的修改, ~~不然代码太多了.~~&#13;
&#13;
## 文章 \&lt;html&gt; 标签样式&#13;
&#13;
`[data-color-mode]`&#13;
优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode] {&#13;
	color: var(--fgColor-default, var(--color-fg-default));&#13;
	background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--html-bgColor: #151c2f;/* 增加 */&#13;
}&#13;
:root {&#13;
	--html-bgColor: #fff;/* 增加 */&#13;
}&#13;
[data-color-mode] {&#13;
	background-color: var(--html-bgColor)&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 博客 滚动条 样式&#13;
&#13;
因为默认的 primer.css 里没有写, 所以下面都是增加代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
::-webkit-scrollbar {&#13;
	width: 10px;&#13;
	height: 10px;&#13;
}&#13;
&#13;
::-webkit-scrollbar-thumb {&#13;
	border-radius: 10px;&#13;
	background: #9fc6e3;&#13;
}&#13;
&#13;
/* Firefox */&#13;
html {&#13;
	scrollbar-color: #9fc6e3 transparent;&#13;
	scrollbar-width: thin;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;code&gt; 标签样式&#13;
&#13;
`.markdown-body code, .markdown-body tt`&#13;
优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
	background-color: var(--bgColor-neutral-muted, var(--color-neutral-muted));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--markdown-code-color: #3bf6ff52;/* 增加 */&#13;
}&#13;
:root {&#13;
	--markdown-code-color: #4d4d4d38;/* 增加 */&#13;
}&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
	background-color: var(--markdown-code-color);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h1&gt; 标签的样式&#13;
&#13;
`.markdown-body h1`&#13;
优化 light &amp; dark 主题下的背景色&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h1 {&#13;
	padding-bottom: .3em;&#13;
	font-size: 2em;&#13;
	border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--markdown-h1-bgColor: #7dc2ff7a;/* 增加 */&#13;
}&#13;
:root {&#13;
	--markdown-h1-bgColor: #c8e5ff7a;/* 增加 */&#13;
}&#13;
.markdown-body h1 {&#13;
	background: var(--markdown-h1-bgColor);&#13;
	border-radius: 10px;&#13;
	font-size: 2em;&#13;
	border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h2&gt; 标签样式&#13;
&#13;
`.markdown-body h2`&#13;
增加下划线动画&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h2 {&#13;
	padding-bottom: .3em;&#13;
	font-size: 1.5em;&#13;
	border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h2 {&#13;
	font-size: 1.5em;&#13;
	border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));&#13;
	background: linear-gradient(45deg, #90d1ff, transparent) no-repeat left bottom;&#13;
	background-size: 0 2px;&#13;
	-webkit-transition: all 0.25s ease;&#13;
	transition: all 0.25s ease;&#13;
}&#13;
/* 增加hover */&#13;
.markdown-body h2:hover {&#13;
	background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;img&gt; 标签样式&#13;
&#13;
`.markdown-body img`&#13;
&#13;
优化 light &amp; dark 主题下的阴影色&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body img {&#13;
	background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection &#13;
	--markdown-imgShadow: #b8fffc29;/* 增加 */&#13;
}&#13;
:root {&#13;
	--markdown-imgShadow: #0000000d;/* 增加 */&#13;
}&#13;
.markdown-body img {&#13;
	box-shadow: 0 4px 8px 0 var(--markdown-imgShadow), 0 -4px 8px 0 var(--markdown-imgShadow);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;a&gt; 标签样式&#13;
&#13;
`a`&#13;
优化 dark 主题下的链接色, 去掉原下划线, 增加下划线动画&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--color-accent-fg: #2f81f7;&#13;
}&#13;
a {&#13;
	background-color: rgba(0, 0, 0, 0)&#13;
}&#13;
a:hover {&#13;
	text-decoration: underline&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--color-accent-fg: #20d4ff;&#13;
}&#13;
a {&#13;
	text-decoration: none !important;&#13;
	background: #0000;&#13;
	background: linear-gradient(#90d1ff, #90d1ff) no-repeat left bottom;&#13;
	background-size: 0 2px;&#13;
	-webkit-transition: all 0.25s ease;&#13;
	transition: all 0.25s ease;&#13;
}&#13;
a:hover {&#13;
	background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
# 使用 Gmeek-html 自定义标签, 给博客插入图片, 防止链接自动转换&#13;
&#13;
Github 在issues 插入的图片也会自动转换为 Github 的地址.&#13;
为了文章的多样性, 在Gmeek的 `v2.19` 版本中添加了支持 html 标签的功能.&#13;
示例代码:&#13;
&#13;
```html&#13;
`Gmeek-html&lt;img src='https://img.jpg' style='text-align: center;'&gt;`&#13;
```&#13;
&#13;
实际展示:&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/Qme1BvwvqLcS86jQqwfxVEFrdNPusCqRn3APhdHGEKLtDb' style='text-align: center;'&gt;`&#13;
&#13;
# 添加自定义单篇文章代码&#13;
&#13;
```html&#13;
&lt;span id='busuanzi'&gt;&#13;
:heart:感谢第&lt;span&gt;&lt;/span&gt;小伙伴的&lt;span&gt;&lt;/span&gt;次访问关于页面.&#13;
&lt;/span&gt;&#13;
&#13;
&lt;!-- ##{'script':'&lt;script&gt;document.getElementById('user-content-busuanzi').id='busuanzi_container_site_uv';busuanzi=document.getElementById('busuanzi_container_site_uv');busuanzi.style.display='none';busuanzi.childNodes[1].id='busuanzi_value_site_uv';busuanzi.childNodes[3].id='busuanzi_value_site_pv';&lt;/script&gt;&lt;script async src='//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js'&gt;&lt;/script&gt;','style':'&lt;style&gt;#busuanzi_value_site_uv{color:red}#busuanzi_value_site_pv{color:red}&lt;/style&gt;'}## --&gt;&#13;
```&#13;
&#13;
# Readme.md&#13;
&#13;
📄 &gt; 文章总数&#13;
💬 &gt; 评论总数&#13;
🌺 &gt; 是统计的所有文章的字符数&#13;
⏰ &gt; 最后一次 Actions 的时间&#13;
。</description><guid isPermaLink="true">https://GJKen.github.io/demo/post/1.html</guid><pubDate>Sun, 03 Nov 2024 15:42:35 +0000</pubDate></item></channel></rss>